<h2>sl-menu</h2>
<p class="lead">A component that can be nested to build complex menu hierarchies.</p>

<h3>Example</h3>
<div class="row">
    <pre class="col-sm-6">\{{sl-menu
    actionInitiated="actionInitiatedHandler"
    changeRoute="changeRouteHandler"
    keyEventsBinding="controller.keyHandler"
    keyboardInUseBinding="controller.keyboardInUse"
    menuBinding="controller.content"
    selectionMade="selectionMadeHandler"
}}</pre>
    {{sl-menu
        actionInitiated="actionInitiatedHandler"
        changeRoute="changeRouteHandler"
        class="col-sm-6"
        keyEventsBinding="controller.keyHandler"
        keyboardInUseBinding="controller.keyboardInUse"
        menuBinding="controller.content"
        selectionMade="selectionMadeHandler"
    }}
</div>

<h3>Properties</h3>
<ul class="list-group">
    {{#property-text name="actionInitiated" type="function"}}
        Handler for string based actions that are associated with a menu item. If a given item has an associated action, the handler bound to the actionInitiated property will be called and the name of the action handed as the only parameter.
    {{/property-text}}

    {{#property-text name="keyEvents" type="array"}}
        Used for providing events to the menu. This can be used in conjunction with the <strong>utils/sl-menu-key-adapter</strong> to provide the proper events to support key presses.
    {{/property-text}}

    {{#property-text name="menu" required=true type="object"}}
        Used to provide the underlying structure of the entire menu. This expects an Ember.Object with a <code>pages</code> attribute that contains an Ember.Array of other nodes. Each node, including the top level, can have the following attributes:
        <ul>
            <li><strong>emberAction</strong> - This can either be a string, which will be received by the <code>actionInitiated</code> binding on the template or can actually be a function that will be executed when the item is selected with either a mouse click or through a keyboard shortcut.</li>
            <li><strong>emberRoute</strong> - This can be used to specify a route to which the application will transition if the menu item is selected.
            <li><strong>emberLink</strong> - This can be used to specify a link to another page.  This should be used to link to pages outside of the Ember app. </li>
            <li><strong>pages</strong> - An array of nodes that will be embedded under the <code>label</code> attribute as a sub-menu.</li>
            <li><strong>label</strong> - The label of the menu itself. This should be <em>null</em> for top level menus and will provide the name of the sub-menu for sub-menu lists</li>
        </ul>
    {{/property-text}}

    {{#property-text name="selectionMade" type="function"}}
        Handler for selection events. Handler will be given the full path to the selected node.
    {{/property-text}}

    {{#property-text name="changeRoute" type="function"}}
        Handler for handling the selection of menu items that have a corresponding emberRoute.  Typically, this will be a simple <code>transitionTo</code> or <code>transitionToRoute</code> call.
    {{/property-text}}

    {{#property-text name="keyboardInUse" type="boolean"}}
        Indicates whether the menu is being interacted with via the keyboard.  This value gets set by the inner workings of the component and is exposed for use by view logic.  One example of how to use this value is to be able to use the <code>TAB</code> key to navigate through the menu options, where its default event needs to suppressed while doing so.
    {{/property-text}}
</ul>
